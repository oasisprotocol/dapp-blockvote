# Simple workflow for deploying content to GitHub Pages
name: Deploy Pontus-X branded version from master branch to Cloudflare

on:
  workflow_run:
    workflows: ["Build and test"]
    types: [completed]
    branches: [master]

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "cf-pontusx"
  cancel-in-progress: false

jobs:
  deploy-pontusx:
    # This name appears in GitHub's Checks API.
    name: cloudflare-deploy
    # Do not trigger job for dependency update bot.
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 18.x
      - uses: pnpm/action-setup@v3
        with:
          version: 9
      - name: Build project
        run: make build-production-pontusx
      - name: Publish to Cloudflare Pages
        uses: cloudflare/wrangler-action@v3
        with:
          packageManager: pnpm
          workingDirectory: "frontend"
          # Token with Cloudflare Pages edit permission only generated in Cloudflare dashboard -> Manage Account -> Account API Tokens
          apiToken: ${{ secrets.CLOUDFLARE_PAGES_API_TOKEN }}
          # Acquired from Cloudflare dashboard -> Compute > Workers & Pages or dashboard url: https://dash.cloudflare.com/<account-id>/
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          # Project created via Cloudflare dashboard or CLI command "npx wrangler pages project create <project-name>"
          command: pages deploy ./dist --project-name=blockvote-app-pontusx --branch main
